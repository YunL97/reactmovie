{"ast":null,"code":"import _regeneratorRuntime from\"/Users/iyunsig/Document/js3/18/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/iyunsig/Document/js3/18/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/iyunsig/Document/js3/18/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/iyunsig/Document/js3/18/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/iyunsig/Document/js3/18/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/iyunsig/Document/js3/18/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import axios from\"axios\";import Movie from\"./Movie\";import\"./App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isLoading:true,movies:[{},{}]};_this.getMovies=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$axios$get,movies;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://비동기\nconsole.log(\"3\");_context.next=3;return axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");case 3:_yield$axios$get=_context.sent;movies=_yield$axios$get.data.data.movies;//axops 는 그렇게 빠르지 않으므로 componentDidMount함수가 끝날때까지 우리가 기다려야한다\nconsole.log(\"4\");_this.setState({movies:movies,isLoading:false});//setState를 호출하면 render 다시실행\nconsole.log(\"5\");case 8:case\"end\":return _context.stop();}}},_callee);}));return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){console.log(\"2\");this.getMovies();}},{key:\"render\",value:function render(){console.log(\"1\");var _this$state=this.state,isLoading=_this$state.isLoading,movies=_this$state.movies;return/*#__PURE__*/_jsx(\"section\",{className:\"container\",children:isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loader\",children:/*#__PURE__*/_jsx(\"span\",{className:\"loader_text\",children:\"Loading...\"})}):/*#__PURE__*/_jsx(\"div\",{className:\"movies\",children:movies.map(function(movie){return/*#__PURE__*/_jsx(Movie,{id:movie.id,year:movie.year,title:movie.title,summary:movie.summary,poster:movie.medium_cover_image,genres:movie.genres},movie.id);})})});//map:배열로 다시 가져와주는것\n}}]);return App;}(React.Component);export default App;// class App extends React.Component {\n//     state = {\n//         isLoading: true,\n//         movies: [{}, {}],\n//     };\n//     componentDidMount() {\n//         //render 호출 후에 componentDidMount 함수가 호출된다\n//         setTimeout(() => {\n//             this.setState({ isLoading: false, book: true });\n//         }, 6000);\n//         axios.\n//     }\n//     render() {\n//         const { isLoading } = this.state;\n//         return <div>{isLoading ? \"Loading...\" : \"we are ready\"}</div>;\n//     }\n// }\n//export default App;\n// class App extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         console.log(\"hello\");\n//     }\n//     state = {\n//         count: 0,\n//     };\n//     add = () => {\n//         this.setState((current) => ({\n//             count: current.count + 1,\n//         })); //setState를 사용하면 호출될때마다 새state와 함께 render function이호출된다\n//     };\n//     minus = () => {\n//         this.setState((current) => ({\n//             count: current.count - 1,\n//         })); //setState를 사용하면 호출될때마다 새state와 함께 render function이호출된다\n//     };\n//     componentDidMount() {\n//         console.log(\"componentDidMount\");\n//     }\n//     componentDidUpdate() {\n//         console.log(\"i just updated\");\n//     }\n//     componentWillUnmount() {\n//         console.log(\"goodbye, reuel world\");\n//     }\n//     render() {\n//         console.log(\"i am rendering\");\n//         return (\n//             <div>\n//                 <h1>Im a class component {this.state.count}</h1>\n//                 <button onClick={this.add}>Add</button>\n//                 <button onClick={this.minus}>Minus</button>\n//             </div>\n//         ); //react는 자동적으로 나의 class component의 render method를 실행한다\n//     }\n// }\n// export default App;\n// const foodILike = [\n//     { id: 1, name: \"Kimchi\", image: \"https://kstory365.files.wordpress.com/2015/01/kimchi-01-cabbage.jpg\", rating: 5 },\n//     {\n//         id: 2,\n//         name: \"bulgogi\",\n//         image: \"https://www.google.com/search?q=%EB%B6%88%EA%B3%A0%EA%B8%B0&rlz=1C5CHFA_enKR902KR902&sxsrf=ALeKk02ziUIXmsNvR7TuYKh1cpJGpdpH8g:1593509047151&source=lnms&tbm=isch&sa=X&ved=2ahUKEwi-p87lm6nqAhVbUd4KHVSWBBUQ_AUoAXoECBgQAw&biw=1440&bih=701&dpr=2#imgrc=kjZoAmvHGo-KfM\",\n//         rating: 5,\n//     },\n//     {\n//         id: 3,\n//         name: \"kimbap\",\n//         image: \"https://www.google.com/search?q=%EA%B9%80%EB%B0%A5&rlz=1C5CHFA_enKR902KR902&sxsrf=ALeKk03dn_nrK6M5JlKKfD5krm8w3qTmGQ:1593509069629&source=lnms&tbm=isch&sa=X&ved=2ahUKEwjqn6rwm6nqAhXDQN4KHYLUA4EQ_AUoAXoECBgQAw&biw=1440&bih=701#imgrc=Xz3xQoYZw3bqEM\",\n//         rating: 5,\n//     },\n//     {\n//         id: 4,\n//         name: \"samgyetang\",\n//         image: \"https://img.seoul.co.kr//img/upload/2019/07/25/SSI_20190725184016.jpg\",\n//         rating: 5,\n//     },\n// ];\n// // function renderFood(dish) {\n// //     return <Food name={dish.name} picture={dish.image} />;\n// // }\n// function Food({ name, picture, rating }) {\n//     return (\n//         <div>\n//             <h2>i like {name}</h2>\n//             <h4>{rating}/5</h4>\n//             <img src={picture} alt={name} />\n//         </div>\n//     );\n// }\n// Food.propTypes = {\n//     name: PropTypes.string.isRequired,\n//     picture: PropTypes.string.isRequired,\n//     rating: PropTypes.number.isRequired, //문자나 숫자가 맞는지 확인해주는것\n// };\n// function App() {\n//     // console.log(foodILike.map(renderFood));\n//     // return <div>{foodILike.map(renderFood)}</div>;\n//     return (\n//         <div>\n//             {foodILike.map((dish) => (\n//                 <Food key={dish.id} name={dish.name} picture={dish.image} rating={dish.rating} />\n//             ))}\n//         </div>\n//     );\n// }\n// export default App;","map":{"version":3,"sources":["/Users/iyunsig/Document/js3/18/src/App.js"],"names":["React","axios","Movie","App","state","isLoading","movies","getMovies","console","log","get","data","setState","map","movie","id","year","title","summary","medium_cover_image","genres","Component"],"mappings":"22BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAO,WAAP,C,8CAEMC,CAAAA,G,2TACFC,K,CAAQ,CACJC,SAAS,CAAE,IADP,CAEJC,MAAM,CAAE,CAAC,EAAD,CAAK,EAAL,CAFJ,C,OAIRC,S,sEAAY,+JACR;AACAC,OAAO,CAACC,GAAR,CAAY,GAAZ,EAFQ,sBAOER,CAAAA,KAAK,CAACS,GAAN,CAAU,uEAAV,CAPF,uCAKQJ,MALR,kBAIJK,IAJI,CAKAA,IALA,CAKQL,MALR,CAOsF;AAC9FE,OAAO,CAACC,GAAR,CAAY,GAAZ,EAEA,MAAKG,QAAL,CAAc,CAAEN,MAAM,CAANA,MAAF,CAAUD,SAAS,CAAE,KAArB,CAAd,EAA6C;AAC7CG,OAAO,CAACC,GAAR,CAAY,GAAZ,EAXQ,sD,kEAaZ,4BAAoB,CAChBD,OAAO,CAACC,GAAR,CAAY,GAAZ,EACA,KAAKF,SAAL,GACH,C,sBACD,iBAAS,CACLC,OAAO,CAACC,GAAR,CAAY,GAAZ,EACA,gBAA8B,KAAKL,KAAnC,CAAQC,SAAR,aAAQA,SAAR,CAAmBC,MAAnB,aAAmBA,MAAnB,CACA,mBACI,gBAAS,SAAS,CAAC,WAAnB,UACKD,SAAS,cACN,YAAK,SAAS,CAAC,QAAf,uBACI,aAAM,SAAS,CAAC,aAAhB,wBADJ,EADM,cAKN,YAAK,SAAS,CAAC,QAAf,UACKC,MAAM,CAACO,GAAP,CAAW,SAACC,KAAD,qBACR,KAAC,KAAD,EAEI,EAAE,CAAEA,KAAK,CAACC,EAFd,CAGI,IAAI,CAAED,KAAK,CAACE,IAHhB,CAII,KAAK,CAAEF,KAAK,CAACG,KAJjB,CAKI,OAAO,CAAEH,KAAK,CAACI,OALnB,CAMI,MAAM,CAAEJ,KAAK,CAACK,kBANlB,CAOI,MAAM,CAAEL,KAAK,CAACM,MAPlB,EACSN,KAAK,CAACC,EADf,CADQ,EAAX,CADL,EANR,EADJ,CAsBG;AACN,C,iBAhDaf,KAAK,CAACqB,S,EAkDxB,cAAelB,CAAAA,GAAf,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n    state = {\n        isLoading: true,\n        movies: [{}, {}],\n    };\n    getMovies = async () => {\n        //비동기\n        console.log(\"3\");\n        const {\n            data: {\n                data: { movies },\n            },\n        } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\"); //axops 는 그렇게 빠르지 않으므로 componentDidMount함수가 끝날때까지 우리가 기다려야한다\n        console.log(\"4\");\n\n        this.setState({ movies, isLoading: false }); //setState를 호출하면 render 다시실행\n        console.log(\"5\");\n    };\n    componentDidMount() {\n        console.log(\"2\");\n        this.getMovies();\n    }\n    render() {\n        console.log(\"1\");\n        const { isLoading, movies } = this.state;\n        return (\n            <section className=\"container\">\n                {isLoading ? (\n                    <div className=\"loader\">\n                        <span className=\"loader_text\">Loading...</span>\n                    </div>\n                ) : (\n                    <div className=\"movies\">\n                        {movies.map((movie) => (\n                            <Movie\n                                key={movie.id}\n                                id={movie.id}\n                                year={movie.year}\n                                title={movie.title}\n                                summary={movie.summary}\n                                poster={movie.medium_cover_image}\n                                genres={movie.genres}\n                            />\n                        ))}\n                    </div>\n                )}\n            </section>\n        ); //map:배열로 다시 가져와주는것\n    }\n}\nexport default App;\n\n// class App extends React.Component {\n//     state = {\n//         isLoading: true,\n//         movies: [{}, {}],\n//     };\n//     componentDidMount() {\n//         //render 호출 후에 componentDidMount 함수가 호출된다\n//         setTimeout(() => {\n//             this.setState({ isLoading: false, book: true });\n//         }, 6000);\n//         axios.\n//     }\n//     render() {\n//         const { isLoading } = this.state;\n//         return <div>{isLoading ? \"Loading...\" : \"we are ready\"}</div>;\n//     }\n// }\n\n//export default App;\n\n// class App extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         console.log(\"hello\");\n//     }\n//     state = {\n//         count: 0,\n//     };\n\n//     add = () => {\n//         this.setState((current) => ({\n//             count: current.count + 1,\n//         })); //setState를 사용하면 호출될때마다 새state와 함께 render function이호출된다\n//     };\n//     minus = () => {\n//         this.setState((current) => ({\n//             count: current.count - 1,\n//         })); //setState를 사용하면 호출될때마다 새state와 함께 render function이호출된다\n//     };\n//     componentDidMount() {\n//         console.log(\"componentDidMount\");\n//     }\n//     componentDidUpdate() {\n//         console.log(\"i just updated\");\n//     }\n//     componentWillUnmount() {\n//         console.log(\"goodbye, reuel world\");\n//     }\n//     render() {\n//         console.log(\"i am rendering\");\n//         return (\n//             <div>\n//                 <h1>Im a class component {this.state.count}</h1>\n//                 <button onClick={this.add}>Add</button>\n//                 <button onClick={this.minus}>Minus</button>\n//             </div>\n//         ); //react는 자동적으로 나의 class component의 render method를 실행한다\n//     }\n// }\n\n// export default App;\n\n// const foodILike = [\n//     { id: 1, name: \"Kimchi\", image: \"https://kstory365.files.wordpress.com/2015/01/kimchi-01-cabbage.jpg\", rating: 5 },\n//     {\n//         id: 2,\n//         name: \"bulgogi\",\n//         image: \"https://www.google.com/search?q=%EB%B6%88%EA%B3%A0%EA%B8%B0&rlz=1C5CHFA_enKR902KR902&sxsrf=ALeKk02ziUIXmsNvR7TuYKh1cpJGpdpH8g:1593509047151&source=lnms&tbm=isch&sa=X&ved=2ahUKEwi-p87lm6nqAhVbUd4KHVSWBBUQ_AUoAXoECBgQAw&biw=1440&bih=701&dpr=2#imgrc=kjZoAmvHGo-KfM\",\n//         rating: 5,\n//     },\n//     {\n//         id: 3,\n//         name: \"kimbap\",\n//         image: \"https://www.google.com/search?q=%EA%B9%80%EB%B0%A5&rlz=1C5CHFA_enKR902KR902&sxsrf=ALeKk03dn_nrK6M5JlKKfD5krm8w3qTmGQ:1593509069629&source=lnms&tbm=isch&sa=X&ved=2ahUKEwjqn6rwm6nqAhXDQN4KHYLUA4EQ_AUoAXoECBgQAw&biw=1440&bih=701#imgrc=Xz3xQoYZw3bqEM\",\n//         rating: 5,\n//     },\n//     {\n//         id: 4,\n//         name: \"samgyetang\",\n//         image: \"https://img.seoul.co.kr//img/upload/2019/07/25/SSI_20190725184016.jpg\",\n//         rating: 5,\n//     },\n// ];\n\n// // function renderFood(dish) {\n// //     return <Food name={dish.name} picture={dish.image} />;\n// // }\n\n// function Food({ name, picture, rating }) {\n//     return (\n//         <div>\n//             <h2>i like {name}</h2>\n//             <h4>{rating}/5</h4>\n//             <img src={picture} alt={name} />\n//         </div>\n//     );\n// }\n// Food.propTypes = {\n//     name: PropTypes.string.isRequired,\n//     picture: PropTypes.string.isRequired,\n//     rating: PropTypes.number.isRequired, //문자나 숫자가 맞는지 확인해주는것\n// };\n\n// function App() {\n//     // console.log(foodILike.map(renderFood));\n//     // return <div>{foodILike.map(renderFood)}</div>;\n//     return (\n//         <div>\n//             {foodILike.map((dish) => (\n//                 <Food key={dish.id} name={dish.name} picture={dish.image} rating={dish.rating} />\n//             ))}\n//         </div>\n//     );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}