{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leeys\\\\Desktop\\\\Document\\\\reactmovie\\\\src\\\\routes\\\\Home.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: [{}, {}]\n    };\n\n    this.getMovies = async () => {\n      //비동기\n      console.log(\"3\");\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\"); //axops 는 그렇게 빠르지 않으므로 componentDidMount함수가 끝날때까지 우리가 기다려야한다\n\n      console.log(\"4\");\n      this.setState({\n        movies,\n        isLoading: false\n      }); //setState를 호출하면 render 다시실행\n\n      console.log(\"5\");\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"2\");\n    this.getMovies();\n  }\n\n  render() {\n    console.log(\"1\");\n    const {\n      isLoading,\n      movies\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"loader_text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, \"Loading...\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, movies.map(movie => /*#__PURE__*/React.createElement(Movie, {\n      key: movie.id,\n      id: movie.id,\n      year: movie.year,\n      title: movie.title,\n      summary: movie.summary,\n      poster: movie.medium_cover_image,\n      genres: movie.genres,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    })))); //map:배열로 다시 가져와주는것\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/leeys/Desktop/Document/reactmovie/src/routes/Home.js"],"names":["React","PropTypes","axios","Movie","Home","Component","state","isLoading","movies","getMovies","console","log","data","get","setState","componentDidMount","render","map","movie","id","year","title","summary","medium_cover_image","genres"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACJC,MAAAA,SAAS,EAAE,IADP;AAEJC,MAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL;AAFJ,KADuB;;AAAA,SAK/BC,SAL+B,GAKnB,YAAY;AACpB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,YAAM;AACFC,QAAAA,IAAI,EAAE;AACFA,UAAAA,IAAI,EAAE;AAAEJ,YAAAA;AAAF;AADJ;AADJ,UAIF,MAAMN,KAAK,CAACW,GAAN,CAAU,uEAAV,CAJV,CAHoB,CAO0E;;AAC9FH,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AAEA,WAAKG,QAAL,CAAc;AAAEN,QAAAA,MAAF;AAAUD,QAAAA,SAAS,EAAE;AAArB,OAAd,EAVoB,CAUyB;;AAC7CG,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACH,KAjB8B;AAAA;;AAkB/BI,EAAAA,iBAAiB,GAAG;AAChBL,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,SAAKF,SAAL;AACH;;AACDO,EAAAA,MAAM,GAAG;AACLN,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,UAAM;AAAEJ,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAwB,KAAKF,KAAnC;AACA,wBACI;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,SAAS,gBACN;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADM,gBAKN;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,MAAM,CAACS,GAAP,CAAYC,KAAD,iBACR,oBAAC,KAAD;AACI,MAAA,GAAG,EAAEA,KAAK,CAACC,EADf;AAEI,MAAA,EAAE,EAAED,KAAK,CAACC,EAFd;AAGI,MAAA,IAAI,EAAED,KAAK,CAACE,IAHhB;AAII,MAAA,KAAK,EAAEF,KAAK,CAACG,KAJjB;AAKI,MAAA,OAAO,EAAEH,KAAK,CAACI,OALnB;AAMI,MAAA,MAAM,EAAEJ,KAAK,CAACK,kBANlB;AAOI,MAAA,MAAM,EAAEL,KAAK,CAACM,MAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CANR,CADJ,CAHK,CAyBF;AACN;;AAhD8B;;AAkDnC,eAAepB,IAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n    state = {\n        isLoading: true,\n        movies: [{}, {}],\n    };\n    getMovies = async () => {\n        //비동기\n        console.log(\"3\");\n        const {\n            data: {\n                data: { movies },\n            },\n        } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\"); //axops 는 그렇게 빠르지 않으므로 componentDidMount함수가 끝날때까지 우리가 기다려야한다\n        console.log(\"4\");\n\n        this.setState({ movies, isLoading: false }); //setState를 호출하면 render 다시실행\n        console.log(\"5\");\n    };\n    componentDidMount() {\n        console.log(\"2\");\n        this.getMovies();\n    }\n    render() {\n        console.log(\"1\");\n        const { isLoading, movies } = this.state;\n        return (\n            <section className=\"container\">\n                {isLoading ? (\n                    <div className=\"loader\">\n                        <span className=\"loader_text\">Loading...</span>\n                    </div>\n                ) : (\n                    <div className=\"movies\">\n                        {movies.map((movie) => (\n                            <Movie\n                                key={movie.id}\n                                id={movie.id}\n                                year={movie.year}\n                                title={movie.title}\n                                summary={movie.summary}\n                                poster={movie.medium_cover_image}\n                                genres={movie.genres}\n                            />\n                        ))}\n                    </div>\n                )}\n            </section>\n        ); //map:배열로 다시 가져와주는것\n    }\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}