{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leeys\\\\Desktop\\\\Document\\\\reactmovie\\\\src\\\\App.js\";\nimport { func } from \"prop-types\";\nimport React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(HashRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/about\",\n    component: About,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/movie-detail\",\n    component: Detail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }));\n} //excet를사용하는이유:path /를 보고 바로 렌더링을 해오기 때문에 /About하면 두개가 같이나옴\n//excet 사용하면 / 단독으로 사용할때만 불려오기 때문에 중첩적으로 오지 않은다\n\n\n_c = App;\nexport default App; //git fetch --all\n//git reset --hard origin/main\n// class App extends React.Component {\n//     state = {\n//         isLoading: true,\n//         movies: [{}, {}],\n//     };\n//     componentDidMount() {\n//         //render 호출 후에 componentDidMount 함수가 호출된다\n//         setTimeout(() => {\n//             this.setState({ isLoading: false, book: true });\n//         }, 6000);\n//         axios.\n//     }\n//     render() {\n//         const { isLoading } = this.state;\n//         return <div>{isLoading ? \"Loading...\" : \"we are ready\"}</div>;\n//     }\n// }\n//export default App;\n// class App extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         console.log(\"hello\");\n//     }\n//     state = {\n//         count: 0,\n//     };\n//     add = () => {\n//         this.setState((current) => ({\n//             count: current.count + 1,\n//         })); //setState를 사용하면 호출될때마다 새state와 함께 render function이호출된다\n//     };\n//     minus = () => {\n//         this.setState((current) => ({\n//             count: current.count - 1,\n//         })); //setState를 사용하면 호출될때마다 새state와 함께 render function이호출된다\n//     };\n//     componentDidMount() {\n//         console.log(\"componentDidMount\");\n//     }\n//     componentDidUpdate() {\n//         console.log(\"i just updated\");\n//     }\n//     componentWillUnmount() {\n//         console.log(\"goodbye, reuel world\");\n//     }\n//     render() {\n//         console.log(\"i am rendering\");\n//         return (\n//             <div>\n//                 <h1>Im a class component {this.state.count}</h1>\n//                 <button onClick={this.add}>Add</button>\n//                 <button onClick={this.minus}>Minus</button>\n//             </div>\n//         ); //react는 자동적으로 나의 class component의 render method를 실행한다\n//     }\n// }\n// export default App;\n// const foodILike = [\n//     { id: 1, name: \"Kimchi\", image: \"https://kstory365.files.wordpress.com/2015/01/kimchi-01-cabbage.jpg\", rating: 5 },\n//     {\n//         id: 2,\n//         name: \"bulgogi\",\n//         image: \"https://www.google.com/search?q=%EB%B6%88%EA%B3%A0%EA%B8%B0&rlz=1C5CHFA_enKR902KR902&sxsrf=ALeKk02ziUIXmsNvR7TuYKh1cpJGpdpH8g:1593509047151&source=lnms&tbm=isch&sa=X&ved=2ahUKEwi-p87lm6nqAhVbUd4KHVSWBBUQ_AUoAXoECBgQAw&biw=1440&bih=701&dpr=2#imgrc=kjZoAmvHGo-KfM\",\n//         rating: 5,\n//     },\n//     {\n//         id: 3,\n//         name: \"kimbap\",\n//         image: \"https://www.google.com/search?q=%EA%B9%80%EB%B0%A5&rlz=1C5CHFA_enKR902KR902&sxsrf=ALeKk03dn_nrK6M5JlKKfD5krm8w3qTmGQ:1593509069629&source=lnms&tbm=isch&sa=X&ved=2ahUKEwjqn6rwm6nqAhXDQN4KHYLUA4EQ_AUoAXoECBgQAw&biw=1440&bih=701#imgrc=Xz3xQoYZw3bqEM\",\n//         rating: 5,\n//     },\n//     {\n//         id: 4,\n//         name: \"samgyetang\",\n//         image: \"https://img.seoul.co.kr//img/upload/2019/07/25/SSI_20190725184016.jpg\",\n//         rating: 5,\n//     },\n// ];\n// // function renderFood(dish) {\n// //     return <Food name={dish.name} picture={dish.image} />;\n// // }\n// function Food({ name, picture, rating }) {\n//     return (\n//         <div>\n//             <h2>i like {name}</h2>\n//             <h4>{rating}/5</h4>\n//             <img src={picture} alt={name} />\n//         </div>\n//     );\n// }\n// Food.propTypes = {\n//     name: PropTypes.string.isRequired,\n//     picture: PropTypes.string.isRequired,\n//     rating: PropTypes.number.isRequired, //문자나 숫자가 맞는지 확인해주는것\n// };\n// function App() {\n//     // console.log(foodILike.map(renderFood));\n//     // return <div>{foodILike.map(renderFood)}</div>;\n//     return (\n//         <div>\n//             {foodILike.map((dish) => (\n//                 <Food key={dish.id} name={dish.name} picture={dish.image} rating={dish.rating} />\n//             ))}\n//         </div>\n//     );\n// }\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/leeys/Desktop/Document/reactmovie/src/App.js"],"names":["func","React","HashRouter","Route","About","Home","Detail","Navigation","App"],"mappings":";AAAA,SAASA,IAAT,QAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,kBAAlC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,SAASC,GAAT,GAAe;AACX,sBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,EAAE,IAAvB;AAA6B,IAAA,SAAS,EAAEH,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAED,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,eAAZ;AAA4B,IAAA,SAAS,EAAEE,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,C,CAAC;AACF;;;KAVSE,G;AAYT,eAAeA,GAAfsourcesContent":["import { func } from \"prop-types\";\nimport React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\n\nfunction App() {\n    return (\n        <HashRouter>\n            <Navigation />\n            <Route path=\"/\" exact={true} component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/movie-detail\" component={Detail} />\n        </HashRouter>\n    );\n} //excet를사용하는이유:path /를 보고 바로 렌더링을 해오기 때문에 /About하면 두개가 같이나옴\n//excet 사용하면 / 단독으로 사용할때만 불려오기 때문에 중첩적으로 오지 않은다\n\nexport default App;\n\n//git fetch --all\n//git reset --hard origin/main\n\n\n// class App extends React.Component {\n//     state = {\n//         isLoading: true,\n//         movies: [{}, {}],\n//     };\n//     componentDidMount() {\n//         //render 호출 후에 componentDidMount 함수가 호출된다\n//         setTimeout(() => {\n//             this.setState({ isLoading: false, book: true });\n//         }, 6000);\n//         axios.\n//     }\n//     render() {\n//         const { isLoading } = this.state;\n//         return <div>{isLoading ? \"Loading...\" : \"we are ready\"}</div>;\n//     }\n// }\n\n//export default App;\n\n// class App extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         console.log(\"hello\");\n//     }\n//     state = {\n//         count: 0,\n//     };\n\n//     add = () => {\n//         this.setState((current) => ({\n//             count: current.count + 1,\n//         })); //setState를 사용하면 호출될때마다 새state와 함께 render function이호출된다\n//     };\n//     minus = () => {\n//         this.setState((current) => ({\n//             count: current.count - 1,\n//         })); //setState를 사용하면 호출될때마다 새state와 함께 render function이호출된다\n//     };\n//     componentDidMount() {\n//         console.log(\"componentDidMount\");\n//     }\n//     componentDidUpdate() {\n//         console.log(\"i just updated\");\n//     }\n//     componentWillUnmount() {\n//         console.log(\"goodbye, reuel world\");\n//     }\n//     render() {\n//         console.log(\"i am rendering\");\n//         return (\n//             <div>\n//                 <h1>Im a class component {this.state.count}</h1>\n//                 <button onClick={this.add}>Add</button>\n//                 <button onClick={this.minus}>Minus</button>\n//             </div>\n//         ); //react는 자동적으로 나의 class component의 render method를 실행한다\n//     }\n// }\n\n// export default App;\n\n// const foodILike = [\n//     { id: 1, name: \"Kimchi\", image: \"https://kstory365.files.wordpress.com/2015/01/kimchi-01-cabbage.jpg\", rating: 5 },\n//     {\n//         id: 2,\n//         name: \"bulgogi\",\n//         image: \"https://www.google.com/search?q=%EB%B6%88%EA%B3%A0%EA%B8%B0&rlz=1C5CHFA_enKR902KR902&sxsrf=ALeKk02ziUIXmsNvR7TuYKh1cpJGpdpH8g:1593509047151&source=lnms&tbm=isch&sa=X&ved=2ahUKEwi-p87lm6nqAhVbUd4KHVSWBBUQ_AUoAXoECBgQAw&biw=1440&bih=701&dpr=2#imgrc=kjZoAmvHGo-KfM\",\n//         rating: 5,\n//     },\n//     {\n//         id: 3,\n//         name: \"kimbap\",\n//         image: \"https://www.google.com/search?q=%EA%B9%80%EB%B0%A5&rlz=1C5CHFA_enKR902KR902&sxsrf=ALeKk03dn_nrK6M5JlKKfD5krm8w3qTmGQ:1593509069629&source=lnms&tbm=isch&sa=X&ved=2ahUKEwjqn6rwm6nqAhXDQN4KHYLUA4EQ_AUoAXoECBgQAw&biw=1440&bih=701#imgrc=Xz3xQoYZw3bqEM\",\n//         rating: 5,\n//     },\n//     {\n//         id: 4,\n//         name: \"samgyetang\",\n//         image: \"https://img.seoul.co.kr//img/upload/2019/07/25/SSI_20190725184016.jpg\",\n//         rating: 5,\n//     },\n// ];\n\n// // function renderFood(dish) {\n// //     return <Food name={dish.name} picture={dish.image} />;\n// // }\n\n// function Food({ name, picture, rating }) {\n//     return (\n//         <div>\n//             <h2>i like {name}</h2>\n//             <h4>{rating}/5</h4>\n//             <img src={picture} alt={name} />\n//         </div>\n//     );\n// }\n// Food.propTypes = {\n//     name: PropTypes.string.isRequired,\n//     picture: PropTypes.string.isRequired,\n//     rating: PropTypes.number.isRequired, //문자나 숫자가 맞는지 확인해주는것\n// };\n\n// function App() {\n//     // console.log(foodILike.map(renderFood));\n//     // return <div>{foodILike.map(renderFood)}</div>;\n//     return (\n//         <div>\n//             {foodILike.map((dish) => (\n//                 <Food key={dish.id} name={dish.name} picture={dish.image} rating={dish.rating} />\n//             ))}\n//         </div>\n//     );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}