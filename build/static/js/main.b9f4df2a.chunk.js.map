{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","App","state","isLoading","movies","getMovies","a","console","log","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAuCeA,MAnCf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,SAAd,SACKD,EAAOI,KACJ,SACIC,EACAC,GAFJ,OAII,qBAAgBL,UAAU,eAA1B,UACKK,EACAD,IAFIC,QAOrB,mBAAGL,UAAU,gBAAb,SAA8BH,WCgC/BS,G,kNAjDXC,MAAQ,CACJC,WAAW,EACXC,OAAQ,CAAC,GAAI,K,EAEjBC,U,sBAAY,8BAAAC,EAAA,6DAERC,QAAQC,IAAI,KAFJ,SAOEC,IAAMC,IAAI,yEAPZ,gBAKQN,EALR,EAIJO,KACIA,KAAQP,OAGhBG,QAAQC,IAAI,KAEZ,EAAKI,SAAS,CAAER,SAAQD,WAAW,IACnCI,QAAQC,IAAI,KAXJ,2C,uDAaZ,WACID,QAAQC,IAAI,KACZK,KAAKR,c,oBAET,WACIE,QAAQC,IAAI,KACZ,MAA8BK,KAAKX,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACI,yBAAST,UAAU,YAAnB,SACKQ,EACG,qBAAKR,UAAU,SAAf,SACI,sBAAMA,UAAU,cAAhB,0BAGJ,qBAAKA,UAAU,SAAf,SACKS,EAAON,KAAI,SAACgB,GAAD,OACR,cAAC,EAAD,CAEIC,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,QANToB,EAAMC,e,GAnCzBE,IAAMC,YCDxBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAGJC,SAASC,eAAe,W","file":"static/js/main.b9f4df2a.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({ year, title, summary, poster, genres }) {\n    return (\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title} />\n            <div className=\"movie_data\">\n                <h3 className=\"movie_title\">{title}</h3>\n                <h5 className=\"movie_year\">{year}</h5>\n                <ul className=\"genres\">\n                    {genres.map(\n                        (\n                            genre,\n                            index //index === itemnumber\n                        ) => (\n                            <li key={index} className=\"genres_genre\">\n                                {index}\n                                {genre}\n                            </li>\n                        )\n                    )}\n                </ul>\n                <p className=\"movie_summary\">{summary}</p>\n            </div>\n        </div>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n}; //json 에있는 데이터중에 쓸데이터만\n\nexport default Movie;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n    state = {\n        isLoading: true,\n        movies: [{}, {}],\n    };\n    getMovies = async () => {\n        //비동기\n        console.log(\"3\");\n        const {\n            data: {\n                data: { movies },\n            },\n        } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\"); //axops 는 그렇게 빠르지 않으므로 componentDidMount함수가 끝날때까지 우리가 기다려야한다\n        console.log(\"4\");\n\n        this.setState({ movies, isLoading: false }); //setState를 호출하면 render 다시실행\n        console.log(\"5\");\n    };\n    componentDidMount() {\n        console.log(\"2\");\n        this.getMovies();\n    }\n    render() {\n        console.log(\"1\");\n        const { isLoading, movies } = this.state;\n        return (\n            <section className=\"container\">\n                {isLoading ? (\n                    <div className=\"loader\">\n                        <span className=\"loader_text\">Loading...</span>\n                    </div>\n                ) : (\n                    <div className=\"movies\">\n                        {movies.map((movie) => (\n                            <Movie\n                                key={movie.id}\n                                id={movie.id}\n                                year={movie.year}\n                                title={movie.title}\n                                summary={movie.summary}\n                                poster={movie.medium_cover_image}\n                                genres={movie.genres}\n                            />\n                        ))}\n                    </div>\n                )}\n            </section>\n        ); //map:배열로 다시 가져와주는것\n    }\n}\nexport default App;\n\n// class App extends React.Component {\n//     state = {\n//         isLoading: true,\n//         movies: [{}, {}],\n//     };\n//     componentDidMount() {\n//         //render 호출 후에 componentDidMount 함수가 호출된다\n//         setTimeout(() => {\n//             this.setState({ isLoading: false, book: true });\n//         }, 6000);\n//         axios.\n//     }\n//     render() {\n//         const { isLoading } = this.state;\n//         return <div>{isLoading ? \"Loading...\" : \"we are ready\"}</div>;\n//     }\n// }\n\n//export default App;\n\n// class App extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         console.log(\"hello\");\n//     }\n//     state = {\n//         count: 0,\n//     };\n\n//     add = () => {\n//         this.setState((current) => ({\n//             count: current.count + 1,\n//         })); //setState를 사용하면 호출될때마다 새state와 함께 render function이호출된다\n//     };\n//     minus = () => {\n//         this.setState((current) => ({\n//             count: current.count - 1,\n//         })); //setState를 사용하면 호출될때마다 새state와 함께 render function이호출된다\n//     };\n//     componentDidMount() {\n//         console.log(\"componentDidMount\");\n//     }\n//     componentDidUpdate() {\n//         console.log(\"i just updated\");\n//     }\n//     componentWillUnmount() {\n//         console.log(\"goodbye, reuel world\");\n//     }\n//     render() {\n//         console.log(\"i am rendering\");\n//         return (\n//             <div>\n//                 <h1>Im a class component {this.state.count}</h1>\n//                 <button onClick={this.add}>Add</button>\n//                 <button onClick={this.minus}>Minus</button>\n//             </div>\n//         ); //react는 자동적으로 나의 class component의 render method를 실행한다\n//     }\n// }\n\n// export default App;\n\n// const foodILike = [\n//     { id: 1, name: \"Kimchi\", image: \"https://kstory365.files.wordpress.com/2015/01/kimchi-01-cabbage.jpg\", rating: 5 },\n//     {\n//         id: 2,\n//         name: \"bulgogi\",\n//         image: \"https://www.google.com/search?q=%EB%B6%88%EA%B3%A0%EA%B8%B0&rlz=1C5CHFA_enKR902KR902&sxsrf=ALeKk02ziUIXmsNvR7TuYKh1cpJGpdpH8g:1593509047151&source=lnms&tbm=isch&sa=X&ved=2ahUKEwi-p87lm6nqAhVbUd4KHVSWBBUQ_AUoAXoECBgQAw&biw=1440&bih=701&dpr=2#imgrc=kjZoAmvHGo-KfM\",\n//         rating: 5,\n//     },\n//     {\n//         id: 3,\n//         name: \"kimbap\",\n//         image: \"https://www.google.com/search?q=%EA%B9%80%EB%B0%A5&rlz=1C5CHFA_enKR902KR902&sxsrf=ALeKk03dn_nrK6M5JlKKfD5krm8w3qTmGQ:1593509069629&source=lnms&tbm=isch&sa=X&ved=2ahUKEwjqn6rwm6nqAhXDQN4KHYLUA4EQ_AUoAXoECBgQAw&biw=1440&bih=701#imgrc=Xz3xQoYZw3bqEM\",\n//         rating: 5,\n//     },\n//     {\n//         id: 4,\n//         name: \"samgyetang\",\n//         image: \"https://img.seoul.co.kr//img/upload/2019/07/25/SSI_20190725184016.jpg\",\n//         rating: 5,\n//     },\n// ];\n\n// // function renderFood(dish) {\n// //     return <Food name={dish.name} picture={dish.image} />;\n// // }\n\n// function Food({ name, picture, rating }) {\n//     return (\n//         <div>\n//             <h2>i like {name}</h2>\n//             <h4>{rating}/5</h4>\n//             <img src={picture} alt={name} />\n//         </div>\n//     );\n// }\n// Food.propTypes = {\n//     name: PropTypes.string.isRequired,\n//     picture: PropTypes.string.isRequired,\n//     rating: PropTypes.number.isRequired, //문자나 숫자가 맞는지 확인해주는것\n// };\n\n// function App() {\n//     // console.log(foodILike.map(renderFood));\n//     // return <div>{foodILike.map(renderFood)}</div>;\n//     return (\n//         <div>\n//             {foodILike.map((dish) => (\n//                 <Food key={dish.id} name={dish.name} picture={dish.image} rating={dish.rating} />\n//             ))}\n//         </div>\n//     );\n// }\n\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import Potato from \"./Potato\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n        {/* <Potato /> */}\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}